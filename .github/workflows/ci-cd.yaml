name: Continuous Integration and Deployment


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_VERSION: '5.0.x'
  AZURE_WEBAPP_NAME: MVC5CoreApp-Dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2
      
      - name: Setup .NET 5 ðŸ”§
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies ðŸ› 
        run: dotnet restore
      
      - name: Build app ðŸš€
        run: dotnet build -c Release --no-restore

      - name: Publish app ðŸ“°
        run: dotnet publish -c Release -o ./out

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@v1.38.2
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Deploy'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"b85d44954a3623120004689b2d5dd60a","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'

  deployprod:
    needs: deploy
    name: Deploy to Prod
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Azure Web Apps ðŸš¢
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_SECRET }}
          package: ./out

